
"use client";

import { useEffect, useState } from 'react';
import { LOCAL_STORAGE_KEY } from '@/lib/constants';
import type { FormValues } from '@/lib/formSchema';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Printer } from 'lucide-react';

const fieldLabels: Record<string, string> = {
  fullName: "Full Name",
  mainCondition: "Main Health Condition or Disability",
  otherConditions: "Other Conditions or Disabilities",
  medications: "Medications",
  preparingFood: "Preparing food",
  eatingAndDrinking: "Eating and drinking",
  managingTreatments: "Managing treatments",
  washingAndBathing: "Washing and bathing",
  managingToiletNeeds: "Managing toilet needs",
  dressingAndUndressing: "Dressing and undressing",
  planningAndFollowingJourneys: "Planning and following journeys",
  movingAround: "Moving around",
  additionalInfo: "Additional Information",
};

export default function PrintPage() {
  const [formData, setFormData] = useState<FormValues | null>(null);
  const [isMounted, setIsMounted] = useState(false);

  useEffect(() => {
    setIsMounted(true);
    try {
      const savedData = localStorage.getItem(LOCAL_STORAGE_KEY);
      if (savedData) {
        setFormData(JSON.parse(savedData));
        setTimeout(() => window.print(), 1000);
      }
    } catch (error) {
      console.error("Failed to load or print data:", error);
    }
  }, []);

  const renderSection = (title: string, fields: (keyof FormValues)[]) => {
    if (!formData) return null;
    const hasContent = fields.some(field => formData[field]);
    if (!hasContent) return null;
  
    return (
      <section className="print-section">
        <h2 className="text-2xl font-bold border-b-2 border-black pb-2 mb-4">{title}</h2>
        <dl className="space-y-4">
          {fields.map(field => {
            const value = formData[field as keyof FormValues];
            if (!value) return null;
            return (
              <div key={field} className="print-item">
                <dt>{fieldLabels[field] || field}</dt>
                <dd className="font-light">{String(value)}</dd>
              </div>
            );
          })}
        </dl>
      </section>
    );
  };
  

  if (!isMounted) {
    return <div className="p-8 text-center">Loading preview...</div>;
  }
  
  if (!formData) {
    return (
      <div className="p-8 text-center text-red-600">
        Could not load form data. Please complete the form before printing.
      </div>
    );
  }

  return (
    <div className="bg-gray-100 p-2 md:p-8 font-sans">
      <header className="no-print mb-8 flex justify-between items-center">
        <h1 className="text-xl font-bold">Print Preview</h1>
        <Button onClick={() => window.print()}>
          <Printer className="mr-2" />
          Print or Save as PDF
        </Button>
      </header>
      <Card className="printable-area w-full max-w-4xl mx-auto p-8 md:p-12 bg-white text-black shadow-lg">
        <CardHeader className="text-center mb-8 border-b-2 border-black pb-4">
          <CardTitle className="text-4xl font-bold">Personal Independence Payment (PIP) Form</CardTitle>
          <p className="text-gray-600">Generated by ClaimEase</p>
        </CardHeader>
        <CardContent>
          {renderSection("Personal Details", ["fullName"])}
          {renderSection("Health Conditions", ["mainCondition", "otherConditions", "medications"])}
          {renderSection("Daily Living", ["preparingFood", "eatingAndDrinking", "managingTreatments", "washingAndBathing", "managingToiletNeeds", "dressingAndUndressing"])}
          {renderSection("Mobility", ["planningAndFollowingJourneys", "movingAround"])}
          {renderSection("Additional Information", ["additionalInfo"])}
        </CardContent>
      </Card>
    </div>
  );
}
